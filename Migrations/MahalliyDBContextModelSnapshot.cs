// <auto-generated />
using System;
using MahalliyMarket.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MahalliyMarket.Migrations
{
    [DbContext(typeof(MahalliyDBContext))]
    partial class MahalliyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MahalliyMarket.Models.Advertisement", b =>
                {
                    b.Property<int>("ads_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ads_image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ads_text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ads_title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ads_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("click_count")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("view_count")
                        .HasColumnType("int");

                    b.HasKey("ads_id");

                    b.HasIndex("created_by");

                    b.HasIndex("product_id");

                    b.ToTable("advertisements");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Cancellation", b =>
                {
                    b.Property<int>("cancellation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("processed_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("processed_by")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("refund_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("requested_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("cancellation_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_id");

                    b.HasIndex("processed_by");

                    b.HasIndex("seller_id");

                    b.ToTable("cancellations");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Cart", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cart_type")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<decimal>("delivery_cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_purchased")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("purchased_at")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("tax_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("total_items")
                        .HasColumnType("int");

                    b.Property<int>("total_quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("cart_id");

                    b.HasIndex("customer_id");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("MahalliyMarket.Models.CartItem", b =>
                {
                    b.Property<int>("cart_item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("added_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("cart_id")
                        .HasColumnType("int");

                    b.Property<decimal>("discount_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("discount_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("estimated_delivery_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("expires_at")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("final_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("cart_item_id");

                    b.HasIndex("cart_id");

                    b.HasIndex("product_id");

                    b.HasIndex("seller_id");

                    b.ToTable("cart_items");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("image_url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("parent_category_id")
                        .HasColumnType("int");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("category_id");

                    b.HasIndex("parent_category_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("MahalliyMarket.Models.DeliveryAddress", b =>
                {
                    b.Property<int>("address_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("city_district")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("mahalla")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("recipient_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("address_id");

                    b.HasIndex("customer_id");

                    b.ToTable("delivery_addresses");
                });

            modelBuilder.Entity("MahalliyMarket.Models.DeliveryMethod", b =>
                {
                    b.Property<int>("delivery_method_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Productid")
                        .HasColumnType("int");

                    b.Property<bool>("can_install")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("delivery_days")
                        .HasColumnType("int");

                    b.Property<decimal>("delivery_fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("installation_fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_free_delivery")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("max_weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("method_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("delivery_method_id");

                    b.HasIndex("Productid");

                    b.HasIndex("seller_id");

                    b.ToTable("delivery_methods");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("delivery_address_id")
                        .HasColumnType("int");

                    b.Property<decimal>("delivery_cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("delivery_method_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("expected_delivery_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("order_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("order_status")
                        .HasColumnType("int");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_base_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_discount_amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("order_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("delivery_address_id");

                    b.HasIndex("delivery_method_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("MahalliyMarket.Models.OrderItem", b =>
                {
                    b.Property<int>("order_item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("discount_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("final_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("product_image_url")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("order_item_id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.HasIndex("seller_id");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Payment", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("bank_account")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("base_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("card_last_four")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("card_type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("exchange_rate")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("failure_reason")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("payment_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("payment_gateway")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("payment_method")
                        .HasColumnType("int");

                    b.Property<string>("payment_notes")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("payment_status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("processed_date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("processing_fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("reference_number")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("refunded_date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("tax_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("transaction_id")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("payment_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_id")
                        .IsUnique();

                    b.ToTable("payments");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("discount_percentage")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Haqiqiy qiymayni olish uchun 1000ga ko'paytirib oling.");

                    b.Property<int?>("product_image_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("tags")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.HasIndex("product_image_id");

                    b.HasIndex("user_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductFeedback", b =>
                {
                    b.Property<int>("feedback_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment_text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("helpful_count")
                        .HasColumnType("int");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_helpful")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_verified_purchase")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("moderated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("moderated_by")
                        .HasColumnType("int");

                    b.Property<string>("moderation_notes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("not_helpful_count")
                        .HasColumnType("int");

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("feedback_id");

                    b.HasIndex("moderated_by");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.HasIndex("user_id");

                    b.ToTable("product_feedbacks");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductHot", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("expires_at")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("tag")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_hots");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductImage", b =>
                {
                    b.Property<int>("image_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("alt_text")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("caption")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("display_order")
                        .HasColumnType("int");

                    b.Property<long?>("file_size")
                        .HasColumnType("bigint");

                    b.Property<int?>("height")
                        .HasColumnType("int");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_primary")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("mime_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("uploaded_by")
                        .HasColumnType("int");

                    b.Property<int?>("width")
                        .HasColumnType("int");

                    b.HasKey("image_id");

                    b.HasIndex("uploaded_by");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductSales", b =>
                {
                    b.Property<int>("sales_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<decimal>("discount_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("discount_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("final_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_refunded")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<string>("payment_method")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("refunded_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("sale_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("sale_location")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("sale_notes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("sales_channel")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("sales_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.HasIndex("seller_id");

                    b.ToTable("product_sales");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductSwiper", b =>
                {
                    b.Property<int>("swiper_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("alt_text")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("click_count")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("display_order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<string>("seo_description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("seo_title")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("subtitle")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("swiper_category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("swiper_type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("view_count")
                        .HasColumnType("int");

                    b.HasKey("swiper_id");

                    b.HasIndex("product_id");

                    b.HasIndex("seller_id");

                    b.ToTable("product_swipers");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductVideo", b =>
                {
                    b.Property<int>("video_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Productid")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("display_order")
                        .HasColumnType("int");

                    b.Property<int?>("duration_seconds")
                        .HasColumnType("int");

                    b.Property<string>("external_video_id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("file_size")
                        .HasColumnType("bigint");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_primary")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("mime_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("platform_type")
                        .HasColumnType("int");

                    b.Property<string>("thumbnail_url")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("uploaded_by")
                        .HasColumnType("int");

                    b.Property<string>("video_description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("video_format")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("video_quality")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("video_title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("video_url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("view_count")
                        .HasColumnType("int");

                    b.HasKey("video_id");

                    b.HasIndex("Productid");

                    b.HasIndex("uploaded_by");

                    b.ToTable("product_videos");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Refund", b =>
                {
                    b.Property<int>("refund_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("approved_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("approved_by")
                        .HasColumnType("int");

                    b.Property<string>("bank_account")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bank_name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("cancellation_id")
                        .HasColumnType("int");

                    b.Property<string>("card_last_four")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("completed_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<bool>("customer_notified")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("customer_notified_at")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_urgent")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("net_refund_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("notes")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<decimal>("original_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("payment_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("processed_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("processed_by")
                        .HasColumnType("int");

                    b.Property<decimal>("processing_fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("reference_number")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("refund_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("refund_method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("refund_type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("requested_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("seller_id")
                        .HasColumnType("int");

                    b.Property<bool>("seller_notified")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("seller_notified_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("transaction_id")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("refund_id");

                    b.HasIndex("approved_by");

                    b.HasIndex("cancellation_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_id");

                    b.HasIndex("payment_id");

                    b.HasIndex("processed_by");

                    b.HasIndex("seller_id");

                    b.ToTable("refunds");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Status", b =>
                {
                    b.Property<int>("status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("status_id");

                    b.ToTable("statuses");

                    b.HasData(
                        new
                        {
                            status_id = 1,
                            status_name = "Pending"
                        },
                        new
                        {
                            status_id = 2,
                            status_name = "Confirmed"
                        },
                        new
                        {
                            status_id = 3,
                            status_name = "Processing"
                        },
                        new
                        {
                            status_id = 4,
                            status_name = "Completed"
                        },
                        new
                        {
                            status_id = 5,
                            status_name = "Failed"
                        },
                        new
                        {
                            status_id = 6,
                            status_name = "Cancelled"
                        },
                        new
                        {
                            status_id = 7,
                            status_name = "Refunded"
                        },
                        new
                        {
                            status_id = 8,
                            status_name = "Approved"
                        },
                        new
                        {
                            status_id = 9,
                            status_name = "Delivered"
                        },
                        new
                        {
                            status_id = 10,
                            status_name = "OutForDelivery"
                        });
                });

            modelBuilder.Entity("MahalliyMarket.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city_district")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("date_birth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("mahalla")
                        .HasColumnType("longtext");

                    b.Property<string>("middle_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("password_hash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("password_salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("postal_code")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("province")
                        .HasColumnType("longtext");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("street")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex(new[] { "email" }, "IX_Users_Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Advertisement", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "creator")
                        .WithMany()
                        .HasForeignKey("created_by");

                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("creator");

                    b.Navigation("product");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Cancellation", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "processor")
                        .WithMany()
                        .HasForeignKey("processed_by");

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("order");

                    b.Navigation("processor");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Cart", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("MahalliyMarket.Models.CartItem", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Cart", "cart")
                        .WithMany("cart_items")
                        .HasForeignKey("cart_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("product");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Category", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Category", "parent_category")
                        .WithMany("sub_categories")
                        .HasForeignKey("parent_category_id");

                    b.Navigation("parent_category");
                });

            modelBuilder.Entity("MahalliyMarket.Models.DeliveryAddress", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany("delivery_addresses")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("MahalliyMarket.Models.DeliveryMethod", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Product", null)
                        .WithMany("delivery_options")
                        .HasForeignKey("Productid");

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany("delivery_methods")
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Order", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.DeliveryAddress", "delivery_address")
                        .WithMany()
                        .HasForeignKey("delivery_address_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.DeliveryMethod", "delivery_method")
                        .WithMany()
                        .HasForeignKey("delivery_method_id");

                    b.Navigation("customer");

                    b.Navigation("delivery_address");

                    b.Navigation("delivery_method");
                });

            modelBuilder.Entity("MahalliyMarket.Models.OrderItem", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Order", "order")
                        .WithMany("order_items")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany("order_items")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Payment", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Order", "order")
                        .WithOne("payment")
                        .HasForeignKey("MahalliyMarket.Models.Payment", "order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("order");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Product", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Category", "category")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.ProductImage", "primary_image")
                        .WithMany()
                        .HasForeignKey("product_image_id");

                    b.HasOne("MahalliyMarket.Models.User", "user")
                        .WithMany("products")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("primary_image");

                    b.Navigation("user");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductFeedback", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "moderator")
                        .WithMany()
                        .HasForeignKey("moderated_by");

                    b.HasOne("MahalliyMarket.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("order_id");

                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany("feedbacks")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("moderator");

                    b.Navigation("order");

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductHot", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductImage", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "uploader")
                        .WithMany()
                        .HasForeignKey("uploaded_by");

                    b.Navigation("uploader");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductSales", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("order_id");

                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany("sales")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("order");

                    b.Navigation("product");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductSwiper", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.ProductVideo", b =>
                {
                    b.HasOne("MahalliyMarket.Models.Product", null)
                        .WithMany("videos")
                        .HasForeignKey("Productid");

                    b.HasOne("MahalliyMarket.Models.User", "uploader")
                        .WithMany()
                        .HasForeignKey("uploaded_by");

                    b.Navigation("uploader");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Refund", b =>
                {
                    b.HasOne("MahalliyMarket.Models.User", "approver")
                        .WithMany()
                        .HasForeignKey("approved_by");

                    b.HasOne("MahalliyMarket.Models.Cancellation", "cancellation")
                        .WithMany()
                        .HasForeignKey("cancellation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.Payment", "payment")
                        .WithMany()
                        .HasForeignKey("payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MahalliyMarket.Models.User", "processor")
                        .WithMany()
                        .HasForeignKey("processed_by");

                    b.HasOne("MahalliyMarket.Models.User", "seller")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("approver");

                    b.Navigation("cancellation");

                    b.Navigation("customer");

                    b.Navigation("order");

                    b.Navigation("payment");

                    b.Navigation("processor");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Cart", b =>
                {
                    b.Navigation("cart_items");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Category", b =>
                {
                    b.Navigation("products");

                    b.Navigation("sub_categories");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Order", b =>
                {
                    b.Navigation("order_items");

                    b.Navigation("payment");
                });

            modelBuilder.Entity("MahalliyMarket.Models.Product", b =>
                {
                    b.Navigation("delivery_options");

                    b.Navigation("feedbacks");

                    b.Navigation("order_items");

                    b.Navigation("sales");

                    b.Navigation("videos");
                });

            modelBuilder.Entity("MahalliyMarket.Models.User", b =>
                {
                    b.Navigation("delivery_addresses");

                    b.Navigation("delivery_methods");

                    b.Navigation("orders");

                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
